{"version":3,"sources":["Sort/Sort.module.css","common/Loader/Loader.jsx","Table/Table.jsx","Sort/Sort.jsx","common/Pagination/Pagination.jsx","App.js","reportWebVitals.js","index.js","common/Loader/Loader.module.css","common/Pagination/Pagination.module.css"],"names":["module","exports","Loader","className","style","wrapper","lds_ripple","Table","props","data","map","item","id","firstName","lastName","phone","Sort","useState","showSort","setShowSort","inputValue","setInputValue","sort","onClick","filter__wrapper","onSubmit","e","preventDefault","filter","target","value","name","required","onChange","type","Pagination","list","i","count","push","tagName","setCurrentPage","textContent","pagination","currentPage","active","App","state","loading","column","setState","toLowerCase","String","includes","this","fetch","then","resp","json","res","console","log","pageSize","pageCount","Math","ceil","length","newList","slice","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76494692.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort__body\":\"Sort_sort__body__24rI2\",\"sort__item\":\"Sort_sort__item__1fHiU\",\"sort__list\":\"Sort_sort__list__29EHJ\",\"sort__type\":\"Sort_sort__type__z_IHE\",\"filter__wrapper\":\"Sort_filter__wrapper__1xHyo\"};","import React from 'react'\r\nimport style from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <div className={style.lds_ripple}>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <table className='table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Расстояние</th>\r\n          <th>Название</th>\r\n          <th>Количество</th>\r\n          <th>Дата</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.map((item) => {\r\n          return (\r\n            <tr key={item.id + item.phone}>\r\n              <td>{item.id}</td>\r\n              <td>{item.firstName}</td>\r\n              <td>{item.lastName}</td>\r\n              <td>{item.phone}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState } from 'react'\r\nimport style from './Sort.module.css'\r\nimport SortItem from './SortItem'\r\n\r\nconst Sort = (props) => {\r\n  let [showSort, setShowSort] = useState(false)\r\n  let [inputValue, setInputValue] = useState('')\r\n  let submit = (e) => {\r\n    e.preventDefault()\r\n    props.filter(e.target[0].value, e.target[1].value, inputValue)\r\n  }\r\n  return (\r\n    <div className={style.sort}>\r\n      <button\r\n        onClick={() => setShowSort((showSort = !showSort))}\r\n        className='btn btn-dark btn-lg btn-block mt-5'\r\n      >\r\n        sort by\r\n      </button>\r\n      {showSort ? (\r\n        <div className={style.filter__wrapper}>\r\n          <form onSubmit={submit}>\r\n            <select name='column' id=''>\r\n              <option value='firstName'>Название</option>\r\n              <option value='lastName'>Количество</option>\r\n              <option value='id'>Расстояние</option>\r\n            </select>\r\n            <select name='type' id=''>\r\n              <option value='equal'>Равно</option>\r\n              <option value='more than'>Больше чем</option>\r\n              <option value='less than'>Меньше чем</option>\r\n              <option value='includes'>Включает</option>\r\n            </select>\r\n\r\n            <input\r\n              required\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              type='text'\r\n            />\r\n          </form>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sort\r\n","import React from 'react'\r\nimport style from './Pagination.module.css'\r\n\r\nconst Pagination = (props) => {\r\n  let list = []\r\n  for (let i = 1; i < props.count + 1; i++) {\r\n    list.push(i)\r\n  }\r\n  let clickHandler = (e) => {\r\n    if (e.target.tagName === 'SPAN') {\r\n      props.setCurrentPage(+e.target.textContent)\r\n    }\r\n  }\r\n  return (\r\n    <div onClick={clickHandler} className={style.pagination}>\r\n      {list.map((i) => (\r\n        <span key={i} className={i == props.currentPage ? style.active : ''}>\r\n          {i}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import './App.css'\nimport React from 'react'\nimport Loader from './common/Loader/Loader'\nimport Table from './Table/Table'\nimport Sort from './Sort/Sort'\nimport Pagination from './common/Pagination/Pagination.jsx'\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    data: [],\n    list: [],\n    currentPage: 1,\n  }\n\n  componentDidMount() {\n    const URLs = [\n      'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n      'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n    ]\n    this.setState({ loading: true })\n    fetch(URLs[1])\n      .then((resp) => resp.json())\n      .then((res) => {\n        this.setState({ data: res, list: res, loading: false })\n      })\n  }\n\n  filter = (column, type, value) => {\n    this.setState({\n      list: this.state.data.filter((item) => {\n        switch (type) {\n          case 'equal':\n            return item[column].toLowerCase() === value.toLowerCase()\n          case 'more than':\n            return item[column] >= value\n          case 'less than':\n            return item[column] <= value\n          case 'includes':\n            return String(item[column].toLowerCase()).includes(\n              String(value.toLowerCase())\n            )\n          default:\n            break\n        }\n      }),\n    })\n  }\n\n  setCurrentPage = (value) => {\n    this.setState({ currentPage: value })\n  }\n  render() {\n    let list\n    if (this.state.list) {\n      list = this.state.list\n    } else {\n      list = this.state.data\n    }\n    console.log('list :', list)\n    let pageSize = 100\n\n    let pageCount = Math.ceil(list.length / pageSize)\n    console.log(pageCount)\n    if (pageCount < 1) {\n      pageCount = 0\n    }\n    let newList = list.slice(\n      (this.state.currentPage - 1) * pageSize,\n      (this.state.currentPage - 1) * pageSize + pageSize\n    )\n\n    return (\n      <div className='container'>\n        {this.state.loading ? (\n          <Loader />\n        ) : (\n          <div>\n            <Sort filter={this.filter} />\n            <Table data={newList} />\n            <div className='row'>\n              <Pagination\n                currentPage={this.state.currentPage}\n                count={pageCount}\n                setCurrentPage={this.setCurrentPage}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ripple\":\"Loader_lds_ripple__3djwo\",\"lds-ripple\":\"Loader_lds-ripple__2vg2L\",\"wrapper\":\"Loader_wrapper__XGAfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Pagination_active__31fP4\"};"],"sourceRoot":""}